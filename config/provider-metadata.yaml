name: hsafra/aerospike
resources:
    aerospike_role:
        subCategory: ""
        description: Aerospike Role
        name: aerospike_role
        title: aerospike_role Resource - terraform-provider-aerospike
        examples:
            - name: role2
              manifest: |-
                {
                  "privileges": [
                    {
                      "namespace": "aerospike",
                      "privilege": "read",
                      "set": "set1"
                    }
                  ],
                  "read_quota": 10,
                  "role_name": "role2"
                }
        argumentDocs:
            namespace: (String) Namespace. Optional - if nulll the privilege will apply to all namespaces. must not be an empty string
            privilege: (String) Privilege name
            privileges: (Attributes Set) Privilege set, comprised from {privilege="name",namespace="name",set="name"] maps. Namespace and Set are optional (see below for nested schema)
            read_quota: (Number) Read quota to apply to the role
            role_name: (String) Role name
            set: (String) Set. Optional - if null the privilege will apply to all sets. Must be used with namespace. Must not be an emptry string
            white_list: (List of String) A list of IP addresses allowed to connect.
            write_quota: (Number) write quota to apply to the role
        importStatements: []
    aerospike_user:
        subCategory: ""
        description: Aerospike user
        name: aerospike_user
        title: aerospike_user Resource - terraform-provider-aerospike
        examples:
            - name: test2
              manifest: |-
                {
                  "password": "test24",
                  "roles": [
                    "role21",
                    "role22"
                  ],
                  "user_name": "test2"
                }
        argumentDocs:
            password: (String, Sensitive) Password
            roles: (List of String) Roles that should be granted to the user
            user_name: (String) User name
        importStatements: []
